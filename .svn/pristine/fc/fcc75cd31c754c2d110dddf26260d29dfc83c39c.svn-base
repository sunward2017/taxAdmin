 <template>
  <div class="app-container">
    <el-col :span="24" class="toolbar">
      <el-form :inline="true" :model="filters">
         <el-form-item>
            <el-select v-model="filters.pid" placeholder="请选择类型" @change="changePid">
                <el-option
                  v-for="item in options"
                  :key="item.value"
                  :label="item.label"
                  :value="item.value">
                </el-option>
            </el-select>
        </el-form-item>
        <el-form-item>
            <el-select v-model="filters.bigId" placeholder="请选择大类">
                <el-option
                  v-for="item in bigList"
                  :key="item.id"
                  :label="item.taxType"
                  :value="item.id">
                </el-option>
              </el-select>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" icon="search" @click="getHotDetailList">查询</el-button>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" icon="plus" @click="handleAdd">新增</el-button>
        </el-form-item>
      </el-form>
    </el-col>
    <template>
      <Grid :columns="hotDetailListColumns" :rows="tableData" v-loading="listLoading" @edit="handleEdit" @del="handleDel" :isEdit="true"
        :isDelete="true" />
    </template>
    <el-dialog :title="formTitle" :visible.sync="formVisible" >
      <el-form :model="formModel" label-width="90px" :rules="formRules" ref="formRef">
        <el-form-item label="热点类型" prop="type">
            <el-select v-model="formModel.type" placeholder="请选择类型" @change="changeType" style="width:100%">
                <el-option
                  v-for="item in options"
                  :key="item.value"
                  :label="item.label"
                  :value="item.value">
                </el-option>
            </el-select>
        </el-form-item>
          <el-form-item label="热点大类" prop="pid">
              <el-select v-model="formModel.pid" placeholder="请选择" style="width:100%">
      			    <el-option
      			      v-for="item in typeList"
      			      :key="item.id"
      			      :label="item.taxType"
      			      :value="item.id">
      			    </el-option>
      			  </el-select>
          </el-form-item>
          <el-form-item label="标题" prop="title">
             <el-input v-model="formModel.title"></el-input>
          </el-form-item>
          <el-form-item label="正文" prop="content">
              <Tinymce ref="tinymce" :value="content"></Tinymce>
          </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="formVisible = false">取 消</el-button>
        <el-button type="primary" @click="handleSubmitForm" :loading="isSubmitting">{{submitBtnText}}</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
  import NProgress from 'nprogress'
  import Grid from '../../components/Grid/Grid'
  import Tinymce from '../../components/tinymce'
  import { hotDetailListColumns } from '../../dictionary/columns'
  import { getList, saveSubmit} from '../../api/table';
  import { resetObj,cloneObj} from '@/utils/cover'

  export default {
    components: {
      Grid,
      Tinymce
    },
    data() {
      return{
        filters:{
          pid: '1',
          bigId:'',
        },
         options: [{
          value: '1',
          label: '一般纳税人'
        }, {
          value: '2',
          label: '小规模纳税人'
        }, {
          value: '3',
          label: '个体工商户'
        }],
        bigList: [],
        typeList:[],//biglist副本
        formTitle: '',
        formVisible: false,
        formModel: {
          type:'1',
           id:'',
          pid: '',
          title:''
        },
        isSubmitting: false,
        submitBtnText: '保存',
        action: '',
        formRules: {
             pid: [{ type: 'number', required: true, message: '请选择大类', trigger: 'blur' }],
             title: [{ required: true, message: '请输入标题', trigger: 'blur' }]
        },
        hotDetailListColumns: hotDetailListColumns,
        currentPage: 1,
        listLoading: false,
        tableData: [],
        content:''
      }
    },
    mounted() { 
      this.changePid();
    },
    methods: {
      changePid() {
        let pId = this.filters.pid;
    	  this.getBigList(pId).then(res => {
          if(res.data&&res.data.length>0){
              this.bigList = res.data.filter((item,index)=>{
                 if(item.pid == pId){
                    return item;
                 }
              });
             this.filters.bigId = '';
          }else{
              this.bigList=[];
              this.filters.bigId ='';
          }
    		}) 
      },
      changeType(){
          let  pId=this.formModel.type
          this.getBigList(pId).then(res => {
              if(res.data&&res.data.length>0){
                 this.typeList = res.data.filter((item,index)=>{
                     if(item.pid == pId){
                        return item;
                     }
                  }); 
                 this.formModel.pid = '';
              }else{
                this.typeList =[];
                this.formModel.pid ='';
              }
          })
      },
      getBigList(id){
        let param={pid:id}
        return  getList("/admin/HotBigList.action",param);
      },
      getHotDetailList(){
        this.listloading = true;
        let pId =this.filters.pid; 
        this.getBigList(pId).then((res)=>{
            if(res.data&&res.data.length>0){
               let obj={}; 
                res.data.forEach(item =>{
                  obj[item.id] = item.taxType;
                }) 
               this.$store.dispatch("SetHotBitTypes",obj);
            }
            if(!this.filters.bigId){ return }
            let param ={pid:this.filters.bigId}
            getList("/admin/HotDetailList.action", param).then(res => {
               this.listloading = false;
               this.tableData = res.data
            }) 
        })
             
      },
      handleAdd() {
        this.formTitle = '新增';
        this.action = 'add';
        this.formModel.type='1';
        this.changeType();
        this.formModel.title ='';
        this.formModel.id =0;
        this.formModel.pid="";
        this.content ='',
        this.formVisible = true;
      },
      handleEdit(r) {
        this.formTitle = "编辑";
        this.action = 'edit';
        this.content=r.content;
        this.formModel = cloneObj(r);
        this.formVisible = true;
      },
      handleDel(r) {
        this.$confirm("确认删除吗？", '提示', {

        }).then(() => {
          this.listLoading = true;
          NProgress.start();
          saveSubmit("/admin/HotDetailDelete.action",{
            Action: 2,
            id: r.id
          }).then((res) => {
            this.listLoading = false;
            NProgress.done();
            if (res.result == '200') {
              this.$notify({
                title: '成功',
                message: '删除成功',
                type: 'success'
              });
              this.getHotDetailList();
            } else {
              this.$notify({
                title: '成功',
                message: res.body.message,
                type: 'error'
              });
            }
            this.formVisible = false;
          });
        }).catch(() => {

        });
      },
      handleSubmitForm() {
        let params =  {};
        params.pid = this.formModel.pid;
        params.title = this.formModel.title;
        params.content = this.$refs.tinymce.getTinymce();
        this.$refs.formRef.validate((valid) => {
          if (valid) {
            this.$confirm('确认提交吗？', '提示', {}).then(() => {
              NProgress.start();
              this.isSubmitting = true;
              this.submitBtnText = '提交中';
              if (this.action === 'add') {
                saveSubmit("/admin/HotDetailModify.action?",{ ...params,
                  Action: 0,
                }).then((res) => {
                  this.isSubmitting = false;
                  NProgress.done();
                  this.submitBtnText = '提交';
                  if (res.result == '200') {
                    this.$notify({
                      title: '成功',
                      message: '新增成功',
                      type: 'success'
                    });

                    this.getHotDetailList();
                  } else {
                    this.$notify({
                      title: '失败',
                      message: res.message,
                      type: 'error'
                    });
                  }
                  this.formVisible = false;
                });
              } else {
                saveSubmit("/admin/HotDetailModify.action?",{ ...params,
                  Action: 1,
                }).then((res) => {
                  this.isSubmitting = false;
                  NProgress.done();
                  this.submitBtnText = '提交';
                  if (res.result == '200') {
                    this.$notify({
                      title: '成功',
                      message: '编辑成功',
                      type: 'success'
                    });

                    this.getHotDetailList();
                  } else {
                    this.$notify({
                      title: '失败',
                      message: res.message,
                      type: 'error'
                    });
                  }
                  this.formVisible = false;
                });
              }
            })
          } else {

          }
        });
      }
    },
     
  }

</script>


